1.Renamed class where main method is to KingSurvivalGameUI.
2.Got rid of every occurance of the word static... nothing works now, just as expected :)
3.Starting to build the oop model.
4.Completly refactored the proverka2 method to one liners and renamed it to ValidateCommand();
5.Started refacturing the Game.cs Changing all constant variables to const.
6.Started to make some of the fields into properties.
7.Started planning about refactoring most game logic by moving it into an external library...
8.Started to get rid of all console.write statements from the library and integrating them inside the main method.
9.Deleted KingSurvivalPawnsGame.cs and moved its logic in the main method.
10.Started adding properties to track the state of the King easier.
11.Finnished implementing the KingSurvivalPawnsGame into the main.
12.Merged ProcessKing and ProecessPawn into one, added GetUserInput()
13.Added colors '+' '-' to the tiles of the board. Refactored the GetGridAsString logic and reduced unneccesary if statements.
14.Cached the current tile content.
15.Added Console.Clear() and SetCursorPosition for better user experience.
16.Continued to move printing and reading logic to the Main method.
17.Moved the ExecuteCommand() to the main class of the UI.
18.Optimized the Methods for moving the king and the pawns.
19.Separated most of the logic in them in several methods, combining the validation for both.
20.Created new methods so that every method can perform a single task and not more.
21.Decided to keep GameFinished property public, but the setter protected - checking for stuck pawns or king invokes the gome to end.
22.Result from optimizations of the code - reduced the lines for the Game.cs class from 800+ to just 300!;
21.Starting documentation.